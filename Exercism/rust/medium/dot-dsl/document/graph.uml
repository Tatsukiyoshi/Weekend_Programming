@startuml graph

class Graph {
  {field} nodes: Vec<Node>
  {field} edges: Vec<Edge>
  {field} attrs: HashMzap<String, String>
  {method} new() -> Self
  {method} with_attrs(&self, &[(&str, &str)]) -> Self
  {method} with_nodes(&self, &Vec<Node>) -> Self
  {method} with_edges(&self, Vec<Edge>) -> Self
  {method} node(&self, &str) -> Node
}

Graph "1" *-- "many" Node : contains

class Node {
  {field} String name
  {field} HashMap attrs
  {method} new(&str) -> Self
  {method} with_attrs(&[(&str, &str)]) -> Self
  {method} attr(&str) -> &str
}

Graph "1" *-- "many" Edge : contains

class Edge {
  {field} Node[] nodes
  {field} HashMap attrs
  {method} new(&str) -> Self
  {method} with_attrs(&[(&str, &str)]) -> Self
  {method} attr(&str) -> &str
}

@enduml
