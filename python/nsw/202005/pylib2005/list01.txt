------------------------------------------------

import xml.etree.ElementTree as ET

tree = ET.parse('sample1.xml')
root = tree.getroot()
ET.dump(root)

------------------------------------------------

●リスト1

import xml.etree.ElementTree as ET

tree = ET.parse('sample1.xml')
root = tree.getroot()

print(root.tag)
print(root[0][2].text)
print(root[2][3].attrib)
print(root[2][3].attrib.get('name'))

------------------------------------------------

for elm in root.iterfind('.//*[@name]'):
    print(elm.attrib)

------------------------------------------------

for elm in root.iterfind('.//neighbor[@name]'):
    print(elm.attrib)

------------------------------------------------

for elm in root.iterfind('.//neighbor[@name="マレーシア"]'):
    print(elm.attrib.get('direction'))

------------------------------------------------

●リスト2

tree = ET.parse('sample1.xml')
root = tree.getroot()

root[0][0].text = '5'

tree.write('output.xml',
    encoding='utf-8', xml_declaration=True)

------------------------------------------------

●リスト3

tree = ET.parse('sample1.xml')
root = tree.getroot()

root[2].set('name', 'Panama')

tree.write('output.xml',
    encoding='utf-8', xml_declaration=True)

------------------------------------------------

●リスト4

tree = ET.parse('sample1.xml')
root = tree.getroot()

elm = ET.Element('country')
elm.set('name', 'フランス')
root.append(elm)

tree.write('output.xml',
    encoding='utf-8', xml_declaration=True)

------------------------------------------------

●リスト5

tree = ET.parse('sample1.xml')
root = tree.getroot()

root.remove(root[1])

tree.write('output.xml',
    encoding='utf-8', xml_declaration=True)

------------------------------------------------

●リスト6

import sqlite3

conn = sqlite3.connect('sample.db')
c = conn.cursor()

c.execute('CREATE TABLE items (id int, name varchar(64), price int)')
c.execute('INSERT INTO items VALUES (1, "SDカード128GB", 1800)')
conn.commit()

conn.close()

------------------------------------------------

●リスト7

conn = sqlite3.connect('sample.db')
c = conn.cursor()

for row in c.execute('SELECT * FROM items'):
    print(row)

conn.close()

------------------------------------------------

●リスト8

conn = sqlite3.connect('sample.db')
c = conn.cursor()

prams = (2, 'USBメモリ32GB', 1200)
c.execute('INSERT INTO items VALUES (?, ?, ?)', prams)
conn.commit()

for row in c.execute('SELECT * FROM items'):
    print(row)

conn.close()

------------------------------------------------
